/* 
Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.

Note: For the purpose of this problem, we define empty string as valid palindrome.

Example 1:

Input: "A man, a plan, a canal: Panama"
Output: true
Example 2:

Input: "race a car"
Output: false
 

Constraints:

s consists only of printable ASCII characters.

Question link: https://leetcode.com/problems/valid-palindrome/

*/

-----------------------------------------------------------------------------

Code:

class Solution {
    
   
    public String removePunctuation(String s){
        
        String ans = "";
        for(int i = 0; i<s.length(); i++){
            
            if(Character.isAlphabetic(s.charAt(i))  ){
                ans+=Character.toLowerCase(s.charAt(i));
            }
            else if(Character.isDigit(s.charAt(i))){
                ans+=s.charAt(i);
            }
    
        }
        return ans;
    }
    
    public String reverse(String s){
        
        String a = "";
        for(int i = s.length() -1; i>=0; i--){
            a+=s.charAt(i);
        }
        return a;
    }
    public boolean isPalindrome(String s) {
        String str = removePunctuation(s);
        return (str.equals(reverse(str)));
    }
}
