Given two binary strings a and b, return their sum as a binary string.
Example 1:

Input: a = "11", b = "1"
Output: "100"
Example 2:

Input: a = "1010", b = "1011"
Output: "10101"
 

Constraints:

1 <= a.length, b.length <= 104
a and b consist only of '0' or '1' characters.
Each string does not contain leading zeros except for the zero itself.

Question link: https://leetcode.com/problems/add-binary/

------------------------------------------------------

class Solution {
    
    public String reverse(String a){
        
        String ab = "";
        for(int i = a.length()-1; i>=0; i--){
            ab+=a.charAt(i);
        }
        return ab;
    }
    public String addBinary(String a, String b) {
        
        String ans="";
        
        if(b.length() == 0){
            return a;
        }
        if(a.length() == 0){
            return b;
        }
        
        
        int digit = 0, n1 = 0, n2 = 0, carry = 0;
        int i1 = a.length() - 1, i2 = b.length() - 1;
        
        while(i1>=0 || i2 >= 0){
            
            digit+=carry;
        
            if(i1>=0){
                n1 = a.charAt(i1) - '0';
                digit+=n1;
                
            }
            if(i2>=0){
                n2 = b.charAt(i2) - '0';
                digit+=n2;
                
            }
            
            int temp = digit;
            carry = digit / 2;
            ans+=(temp%2);
            digit = 0;
            i1--;
            i2--;
            
        }
        if(carry/2 == 1){
            ans+=(carry/2);
        }
        
        if(carry == 1){
            ans+=carry;
        }
        
        return reverse(ans);
    }
}

